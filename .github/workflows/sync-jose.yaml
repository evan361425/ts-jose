name: Sync Version From JOSE

on:
  schedule:
    # sync every day
    - cron: "30 0 * * *"
  workflow_dispatch:
    # Enable manual run
    inputs:
      version:
        description: "JOSE version"
        required: false
        default: "0.0.0"
      release:
        description: "Whether tag and release the latest commit"
        required: false
        default: "false"

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.output.outputs.value }}
      description: ${{ steps.jose-tag.outputs.description }}
    steps:
      - name: Get JOSE latest tag
        if: ${{ github.event_name == 'schedule' }}
        id: jose-tag
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: panva
          repo: jose
      - name: Trim tag
        if: ${{ github.event_name == 'schedule' }}
        id: jose-version
        run: |
          v=$(echo ${{ steps.jose-tag.outputs.release }} | cut -c 2-)
          echo "v=$v" >> "$GITHUB_OUTPUT"
      - name: Determine version
        uses: haya14busa/action-cond@v1
        id: output
        with:
          cond: ${{ github.event_name == 'workflow_dispatch' }}
          if_true: ${{ github.event.inputs.version }}
          if_false: ${{ steps.jose-version.outputs.v }}

  check:
    runs-on: ubuntu-latest
    needs: version
    outputs:
      version: ${{ steps.output.outputs.value }}
      description: ${{ needs.version.outputs.description }}
    if: ${{ github.event.inputs.release != 'true' }}
    steps:
      - uses: actions/checkout@v4

      - name: Get package.json version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: Check version
        uses: actions/github-script@v6
        id: check-result
        with:
          script: |
            const target = '${{ needs.version.outputs.version }}'.split('.').map(e => Number(e));
            const source = '${{ steps.package-version.outputs.current-version }}'.split('.').map(e => Number(e));
            if (target.length != source.length || target.some(isNaN) || source.some(isNaN)) {
              return false;
            }
            if (target[0] == source[0]) {
              if (target[1] == source[1]) {
                return target[2] > source[2];
              }
              return target[1] > source[1];
            }
            return target[2] > source[2];
      - name: Determine version
        uses: haya14busa/action-cond@v1
        id: output
        with:
          cond: ${{ steps.check-result.outputs.result == 'true' }}
          if_true: ${{ needs.version.outputs.version }}
          if_false: ""

  sync:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.version != '' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up environment
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Set up user
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Bump package.json version
        run: npm --no-git-tag-version version ${{ needs.check.outputs.version }}

      - name: Update JOSE version
        run: |
          npm i jose@${{ needs.check.outputs.version }} --save-exact
          npm i
          npm test

      - name: Commit
        # `npm version` will generate tag, delete it first
        run: |
          git commit . -m "Bump version to ${{ needs.check.outputs.version }}"
          git tag -d v${{ needs.check.outputs.version }} || true
          git tag -d ${{ needs.check.outputs.version }} || true
          git tag v${{ needs.check.outputs.version }}

      - name: Push commit and tag
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          tags: true

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ needs.check.outputs.version }}
          body: |
            This is auto-generated release from GitHub Actions.
            Real diff can be found at [jose v${{ needs.check.outputs.version }} release](https://github.com/panva/jose/releases/tag/v${{ needs.check.outputs.version }}).

            ---

            ${{ needs.check.outputs.description }}

  release_by_dispatch:
    runs-on: ubuntu-latest
    needs: version
    if: ${{ github.event.inputs.release == 'true' }}
    steps:
      - uses: actions/checkout@v4

      - name: Tag
        # `npm version` will generate tag, delete it first
        run: |
          git tag -d v${{ needs.version.outputs.version }} || true
          git tag -d ${{ needs.version.outputs.version }} || true
          git tag v${{ needs.version.outputs.version }}

      - name: Push tag
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          tags: true

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ needs.version.outputs.version }}
          body: |
            This release is auto-generated by GitHub Actions.
            The real diff is in jose [v${{ needs.version.outputs.version }} release](https://github.com/panva/jose/releases/tag/v${{ needs.version.outputs.version }}).
